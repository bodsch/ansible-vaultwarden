---

- name: detect installed vaultwarden
  block:
    - name: detect if vaultwarden exists
      ansible.builtin.stat:
        path: /usr/bin/vaultwarden
      register: vaultwarden_binary_file

    - name: define vaultwarden_installed
      ansible.builtin.set_fact:
        vaultwarden_installed: "{{ vaultwarden_binary_file.stat.exists }}"

- name: merge vaultwarden configuration between defaults and custom
  ansible.builtin.set_fact:
    vaultwarden_config: "{{ vaultwarden_defaults_config | combine(vaultwarden_config, recursive=True) }}"

- name: detect installed vaultwarden web
  block:
    - name: detect if vaultwarden web exists
      ansible.builtin.stat:
        path: "{{ vaultwarden_config.directories.web_vault }}/web-vault"
      register: vaultwarden_web_version_directory

    - name: detect if vaultwarden web exists
      ansible.builtin.stat:
        path: "{{ vaultwarden_config.directories.web_vault }}/{{ vaultwarden_webvault.version }}/web-vault/version.json"
      register: vaultwarden_web_version_file

    - name: read the installed vaultwarden web version
      ansible.builtin.slurp:
        src: "{{ vaultwarden_config.directories.web_vault }}/{{ vaultwarden_webvault.version }}/web-vault/version.json"
      register: _vaultwarden_web_version
      when:
        - vaultwarden_web_version_file.stat.exists

    - name: define vaultwarden_web_installed
      ansible.builtin.set_fact:
        vaultwarden_web_installed: "{{ vaultwarden_web_version_file.stat.exists }}"
        vaultwarden_web_version: "{{ _vaultwarden_web_version.get('content', '') | b64decode }}"

- name: detect installed vaultwarden cli
  block:
    - name: detect if vaultwarden cli exists
      ansible.builtin.stat:
        path: "{{ vaultwarden_config.directories.data }}/rbw"
      register: vaultwarden_cli_version_directory

    - name: detect if vaultwarden cli exists
      ansible.builtin.stat:
        path: "{{ vaultwarden_config.directories.data }}/rbw_{{ vaultwarden_cli.version }}/rbw"
      register: vaultwarden_cli_version_file

    - name: define vaultwarden_cli_installed
      ansible.builtin.set_fact:
        vaultwarden_cli_installed: "{{ vaultwarden_cli_version_file.stat.exists }}"

# debian based
#
- name: debian based
  when:
    - ansible_os_family | lower == 'debian'
  block:
    - name: download vaultwarden GPG
      become: true
      ansible.builtin.get_url:
        url: https://bitwarden-deb.tech-network.de/bananian-keyring.gpg
        dest: /etc/apt/trusted.gpg.d/bananian-keyring.gpg
        mode: 0644
      register: _download_gpg
      until: _download_gpg is succeeded
      retries: 5
      delay: 2
      check_mode: false

    - name: add vaultwarden repo source
      ansible.builtin.template:
        src: etc/apt/vaultwarden.list.j2
        dest: /etc/apt/sources.list.d/vaultwarden.list
        mode: 0644
      register: vaultwarden_repo_source

    - name: update package cache  # noqa no-handler
      become: true
      ansible.builtin.package:
        update_cache: true
      when:
        - vaultwarden_repo_source.changed

- name: create policy-rc.d
  when:
    - not vaultwarden_installed
    - ansible_os_family | lower == 'debian'
  ansible.builtin.copy:
    dest: /usr/sbin/policy-rc.d
    content: |
      #!/bin/sh
      exit 101
    mode: 0755
  tags:
    - vaultwarden
    - vaultwarden_install

- name: install package
  when:
    - not vaultwarden_installed
  ansible.builtin.package:
    name: "{{ vaultwarden_packages }}"
    state: present
  tags:
    - vaultwarden
    - vaultwarden_install

- name: create the systemd service file
  when:
    - ansible_service_mgr | lower == "systemd"
  ansible.builtin.template:
    src: init/systemd/vaultwarden.service.j2
    dest: "{{ systemd_lib_directory }}/vaultwarden.service"
    owner: root
    group: root
    mode: 0644
  notify:
    - daemon-reload
    - restart service

- name: remove policy-rc.d
  when:
    - not vaultwarden_installed
    - ansible_os_family | lower == 'debian'
  ansible.builtin.file:
    path: /usr/sbin/policy-rc.d
    state: absent
  tags:
    - vaultwarden
    - vaultwarden_install

- name: assert broken database configuration
  ansible.builtin.assert:
    that:
      - vaultwarden_config.database.url | supported_databases(ansible_distribution, ansible_os_family)
    msg: "This version of vaultwarden currently only supports one sqlite database!\nPlease change your configuration."
    quiet: true

- name: vaultwarden web
  when:
    - vaultwarden_config.web_vault.enabled | default('false') | bool
    - vaultwarden_config.directories.web_vault is defined
    - vaultwarden_config.directories.web_vault | string | length > 0
    - vaultwarden_web_version_directory.stat.isdir | default('false') or
      not vaultwarden_web_installed
  block:
    - name: create vaultwarden web directory
      ansible.builtin.file:
        state: directory
        path: "{{ vaultwarden_config.directories.web_vault }}/{{ vaultwarden_webvault.version }}"
        owner: vaultwarden
        group: vaultwarden
        mode: 0775

    - name: download vaultwarden web
      become: true
      ansible.builtin.get_url:
        url: "https://github.com/dani-garcia/bw_web_builds/releases/download/v{{ vaultwarden_webvault.version }}/bw_web_v{{ vaultwarden_webvault.version }}.tar.gz"
        dest: /tmp/
        mode: 0644
        validate_certs: false
      register: _download
      until: _download is succeeded
      retries: 5
      delay: 2
      check_mode: false

    - name: install vaultwarden web
      ansible.builtin.unarchive:
        src: "/tmp/bw_web_v{{ vaultwarden_webvault.version }}.tar.gz"
        dest: "{{ vaultwarden_config.directories.web_vault }}/{{ vaultwarden_webvault.version }}/"
        remote_src: true
        owner: vaultwarden
        group: vaultwarden

    - name: remove older web-vault directory
      ansible.builtin.file:
        path: "{{ vaultwarden_config.directories.web_vault }}/web-vault"
        state: absent
      when:
        - not vaultwarden_web_version_directory.stat.islnk | default('false')

    - name: create link for web-vault
      ansible.builtin.file:
        src: "{{ vaultwarden_config.directories.web_vault }}/{{ vaultwarden_webvault.version }}/web-vault"
        dest: "{{ vaultwarden_config.directories.web_vault }}/web-vault"
        state: link
        force: true
        follow: false

    - name: create custom fact file
      bodsch.core.facts:
        name: vaultwarden_web
        facts:
          version: "{{ vaultwarden_webvault.version }}"

- name: vaultwarden cli
  when:
    - vaultwarden_cli.state | default('absent') in ["absent", "present"]
    - vaultwarden_cli.state | default('absent') == "present"
    - vaultwarden_cli_version_directory.stat.isdir | default('false') or
      not vaultwarden_cli_installed
  block:
    - name: download vaultwarden cli
      become: true
      ansible.builtin.get_url:
        # https://github.com/doy/rbw/releases/download/1.10.1/rbw_1.10.1_linux_amd64.tar.gz
        url: "https://github.com/doy/rbw/releases/download/{{ vaultwarden_cli.version }}/rbw_{{ vaultwarden_cli.version }}_linux_amd64.tar.gz"
        dest: /tmp/
        mode: 0644
        validate_certs: false
      register: _download
      until: _download is succeeded
      retries: 5
      delay: 2
      check_mode: false

    - name: create vaultwarden cli directory
      ansible.builtin.file:
        state: directory
        path: "{{ vaultwarden_config.directories.data }}/rbw_{{ vaultwarden_cli.version }}"
        owner: vaultwarden
        group: vaultwarden
        mode: 0775

    - name: install vaultwarden cli
      ansible.builtin.unarchive:
        src: "/tmp/rbw_{{ vaultwarden_cli.version }}_linux_amd64.tar.gz"
        dest: "{{ vaultwarden_config.directories.data }}/rbw_{{ vaultwarden_cli.version }}/"
        remote_src: true
        owner: vaultwarden
        group: vaultwarden

    - name: create link for cli client
      ansible.builtin.file:
        src: "{{ vaultwarden_config.directories.data }}/rbw_{{ vaultwarden_cli.version }}/rbw"
        dest: "{{ vaultwarden_config.directories.data }}/rbw"
        state: link
        owner: vaultwarden
        group: vaultwarden
        force: true
        follow: false

    - name: create cli configuration directory
      ansible.builtin.file:
        state: directory
        path: "${HOME}/.config/rbw"
        mode: 0750

    - name: create cli configuration
      ansible.builtin.template:
        src: etc/rbw/config.json.j2
        dest: "${HOME}/.config/rbw/config.json"
        backup: true
        mode: 0644

    - name: create custom fact file
      bodsch.core.facts:
        name: vaultwarden_cli
        facts:
          version: "{{ vaultwarden_cli.version }}"

- name: remove vaultwarden cli
  when:
    - vaultwarden_cli.state | default('absent') == "absent"
    # - vaultwarden_cli_installed
  block:
    - name: remove link for cli client
      ansible.builtin.file:
        path: "{{ vaultwarden_config.directories.data }}/rbw"
        state: absent
        force: true

    - name: remove cli client
      ansible.builtin.file:
        path: "{{ vaultwarden_config.directories.data }}/rbw_{{ vaultwarden_cli.version }}"
        state: absent
        force: true

    - name: remove cli configuration
      ansible.builtin.file:
        state: absent
        path: "${HOME}/.config/rbw"

    - name: remove custom fact file
      ansible.builtin.file:
        state: absent
        path: "/etc/ansible/facts.d/vaultwarden_cli.fact"

...
